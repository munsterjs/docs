(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(6),o=(n(0),n(91)),p={id:"router.md",title:"Router",sidebar_label:"Router",slug:"/router"},c={unversionedId:"router.md",id:"router.md",isDocsHomePage:!1,title:"Router",description:"Router is a plugin that enables developers to build a single page application with multiple components that acts as different views of the app.",source:"@site/docs\\router.md",slug:"/router",permalink:"/docs/docs/router",editUrl:"https://github.com/munsterjs/docs/blob/master/docs/router.md",version:"current",sidebar_label:"Router",sidebar:"someSidebar",previous:{title:"Props",permalink:"/docs/docs/props"},next:{title:"Model",permalink:"/docs/docs/model"}},l=[{value:"How to use",id:"how-to-use",children:[]},{value:"Route component",id:"route-component",children:[]},{value:"Router properties",id:"router-properties",children:[]},{value:"Creating routes",id:"creating-routes",children:[]},{value:"Dynamic route matching",id:"dynamic-route-matching",children:[]},{value:"Router link",id:"router-link",children:[]},{value:"Middleware",id:"middleware",children:[]}],i={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Router is a plugin that enables developers to build a single page application with multiple components that acts as different views of the app.\nView changes depending on the activated route. Activated routes depends on the url of the browser and the path registered in the router."),Object(o.b)("h2",{id:"how-to-use"},"How to use"),Object(o.b)("p",null,"To use this router, we need to import the ",Object(o.b)("inlineCode",{parentName:"p"},"RouterModule")," in order to use the router features inside the parent module."),Object(o.b)("p",null,"Here's an example on how to register the router:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"import { Module } from '@munster/core';\nimport { RouterModule } from '@munster/router';\n\n@Module({\n    modules: [\n        RouterModule\n    ]\n})\nexport class AppModule { }\n")),Object(o.b)("h2",{id:"route-component"},"Route component"),Object(o.b)("p",null,"After the router module is registered in a module, a route component is automatically available to that module.\nRoute component has attributes of path, exact, component, redirect, and property of middleware.\nPath and component are required and the reset are optional."),Object(o.b)("p",null,"Here's an example on how to use the route component:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'<app-route path="/sample/path" component="app-sample-component" />\n')),Object(o.b)("h2",{id:"router-properties"},"Router properties"),Object(o.b)("h4",{id:"navigate"},"Navigate"),Object(o.b)("p",null,"After router is registered in a module, a ",Object(o.b)("inlineCode",{parentName:"p"},"$navigate")," property is added to all the component registered in the module.\nThis navigate feature the same as the ",Object(o.b)("inlineCode",{parentName:"p"},"Navigate")," plugin."),Object(o.b)("p",null,"We can find more information about the navigate plugin in ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/docs/navigate"}),"here"),"."),Object(o.b)("h4",{id:"router"},"Router"),Object(o.b)("p",null,"Component added to the dom tree using the ",Object(o.b)("inlineCode",{parentName:"p"},"app-route")," component will have ",Object(o.b)("inlineCode",{parentName:"p"},"this.$router")," property.\nThis property is an object that contains some useful property or functions for this router."),Object(o.b)("p",null,"The following are the properties and functions inside ",Object(o.b)("inlineCode",{parentName:"p"},"this.$router")," property:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Method/Property"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"onRouteChange"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An observable property that triggers when the routes is changed.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"params"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A function that returns the route parameters.")))),Object(o.b)("h5",{id:"onroutechange"},"onRouteChange"),Object(o.b)("p",null,"Here's an example on how to subscribe to the onRouteChange event:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"import Template from './app.component.html';\nimport { Component, SuperClass, OnConnected, OnDisconnected, SubscriptionInterface } from '@munster/core';\n\n@Component({\n    selector: 'app-component',\n    template: Template\n})\nexport class AppComponent SuperClass() implements OnConnected, OnDisconnected {\n    private subscription: SubscriptionInterface;\n\n    public connected(): void {\n        this.subscription = this.$router.onRouteChange.subscribe(() => {\n            ...\n        });\n    }\n\n    public disconnected(): void {\n        this.subscription.unsubscribe();\n    }\n}\n")),Object(o.b)("h5",{id:"params"},"params"),Object(o.b)("p",null,"We can also get the router parameters using ",Object(o.b)("inlineCode",{parentName:"p"},"this.$router.params()"),"."),Object(o.b)("p",null,"Here's an example on how to get the router parameters:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"import Template from './app.component.html';\nimport { Component, SuperClass, OnConnected } from '@munster/core';\n\n@Component({\n    selector: 'app-component',\n    template: Template\n})\nexport class AppComponent SuperClass() implements OnConnected {\n    public connected(): void {\n        const routerParams = this.$router.params();\n    }\n}\n")),Object(o.b)("h2",{id:"creating-routes"},"Creating routes"),Object(o.b)("p",null,"A route is just a javascript object that contains two required properties, ",Object(o.b)("inlineCode",{parentName:"p"},"path")," and ",Object(o.b)("inlineCode",{parentName:"p"},"component")," and some optional properties."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Properties"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"type"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"path"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The path that should match in the browser url pathname before the route is activated.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"component"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The component selector of the component that will be rendered where the ",Object(o.b)("inlineCode",{parentName:"td"},"<app-route />")," tag is located.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"exact"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Boolean"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"If the values is true, then the Component will only activate if route path is an exact match with the browser url pathname but still respect the dynamic route matching.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"middleware"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Array"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"It is another layer of checking if the component should be active or not.")))),Object(o.b)("p",null,"Here are some example on how to create routes:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'<div>\n    <app-route path="/" component="app-landing-page-component" exact={true} />\n    <app-route path="/login" component="app-login-component" middleware=[GuestMiddleware] />\n    <app-route path="/auth" component="app-auth-component" middleware=[AuthMiddleware] />\n</div>\n')),Object(o.b)("h2",{id:"dynamic-route-matching"},"Dynamic route matching"),Object(o.b)("p",null,"Dynamic route matching is a way to match a route path segment into its matching browser url pathname segment.\nA dynamic segment is denoted by a colon ",Object(o.b)("inlineCode",{parentName:"p"},":")," followed by the segment name. ex. ",Object(o.b)("inlineCode",{parentName:"p"},"/:userId"),".\nThe value of the dynamic segments is accessible in it's component only using ",Object(o.b)("inlineCode",{parentName:"p"},"this.$router.params()"),"."),Object(o.b)("p",null,"Here's a table of dynamic routes and its corresponding values in ",Object(o.b)("inlineCode",{parentName:"p"},"this.$router.params()"),":"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"component path"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"browser url pathname"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"this.$router.params()"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/:path"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/100"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"{ path: 100 }")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/user/:userId"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/user/123"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"{ userId: 123 }")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/post/:postId/:userId"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/post/1/123"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"{ postId: 1, userId: 123 }")))),Object(o.b)("h2",{id:"router-link"},"Router link"),Object(o.b)("p",null,"Router link is an additional feature of the router module.\nIt is a directive that allows us to navigate to different routes once an element is clicked."),Object(o.b)("p",null,"Here's an example on how to add a router link:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<div>\n    <a router:link="/route-path">I am a link</a>\n    <button router:link="/route-path">I am a button</button>\n</div>\n')),Object(o.b)("h2",{id:"middleware"},"Middleware"),Object(o.b)("p",null,"Middleware is another way to check if a component can activate.\nIt can also run a block of codes before a route event happen."),Object(o.b)("p",null,"Here's an example on how to use middleware:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'<app-route path="/sample-path" component="app-sample-component" middleware=[SampleMiddleware] />\n')),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"export class SampleMiddleware {\n    canActivate() {\n        // returns a boolean or a promise\n    }\n}\n")),Object(o.b)("p",null,"If ",Object(o.b)("inlineCode",{parentName:"p"},"canActivate")," method returns true or a promise that resolves to true, then the component is allowed to activate and not allowed if otherwise."))}b.isMDXComponent=!0},91:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=r.a.createContext({}),b=function(e){var t=r.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=b(n),m=a,d=u["".concat(p,".").concat(m)]||u[m]||s[m]||o;return n?r.a.createElement(d,c(c({ref:t},i),{},{components:n})):r.a.createElement(d,c({ref:t},i))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,p[1]=c;for(var i=2;i<o;i++)p[i]=n[i];return r.a.createElement.apply(null,p)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);